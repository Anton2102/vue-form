{"remainingRequest":"/home/anton/GITHUB/vue-form/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/anton/GITHUB/vue-form/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/anton/GITHUB/vue-form/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anton/GITHUB/vue-form/src/components/FormComponent.vue?vue&type=template&id=56b15c19&","dependencies":[{"path":"/home/anton/GITHUB/vue-form/src/components/FormComponent.vue","mtime":1603710480835},{"path":"/home/anton/GITHUB/vue-form/node_modules/cache-loader/dist/cjs.js","mtime":1603706498234},{"path":"/home/anton/GITHUB/vue-form/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1603706498878},{"path":"/home/anton/GITHUB/vue-form/node_modules/cache-loader/dist/cjs.js","mtime":1603706498234},{"path":"/home/anton/GITHUB/vue-form/node_modules/vue-loader/lib/index.js","mtime":1603706498878}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}